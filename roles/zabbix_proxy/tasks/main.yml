---
# tasks file for zabbix_proxy
- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - always

- name: Determine Latest Supported Zabbix Version
  set_fact:
    zabbix_proxy_version: "{{ zabbix_valid_proxy_versions[ansible_distribution_major_version][0] | default(6.4) }}"
  when: zabbix_proxy_version is not defined or zabbix_proxy_version is none
  tags:
    - always

- name: Set More Variables
  set_fact:
    zabbix_proxy_db_long: "{{ 'postgresql' if zabbix_proxy_database == 'pgsql' else zabbix_proxy_database }}"
    zabbix_valid_version: "{{ zabbix_proxy_version|float in zabbix_valid_proxy_versions[ansible_distribution_major_version] }}"
    zabbix_short_version: "{{ zabbix_proxy_version | regex_replace('\\.', '') }}"
  tags:
    - always

- name: Stopping Install of Invalid Version
  fail:
    msg: Zabbix version {{ zabbix_proxy_version }} is not supported on {{ ansible_distribution }} {{ ansible_distribution_major_version }}
  when: not zabbix_valid_version
  tags:
    - always

- name: Set Path to SQL File
  set_fact:
    datafile_path: "{{ db_file_path[zabbix_short_version] }}"
  tags:
    - install
    - config

- name: "Set default ip address for zabbix_proxy_ip"
  set_fact:
    zabbix_proxy_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"
  when:
    - zabbix_proxy_ip is not defined
    - "'ansible_default_ipv4' in hostvars[inventory_hostname]"
  tags:
    - install
    - config
    - api

- name: "Complete OS Specific Tasks"
  include: "{{ ansible_os_family }}.yml"

- name: "Get the file for database schema"
  shell: ls -1 {{ db_file_path[zabbix_short_version] }}
  changed_when: false
  become: true
  when:
    - zabbix_proxy_database_sqlload
  register: ls_output_schema
  tags:
    - database

- name: "Installing the database"
  include_tasks: "{{ zabbix_proxy_db_long }}.yml"

- name: "Create include dir zabbix-proxy"
  file:
    path: "{{ zabbix_proxy_include }}"
    owner: "{{ zabbix_os_user }}"
    group: "{{ zabbix_os_user }}"
    mode: "{{ zabbix_proxy_include_mode }}"
    state: directory
  become: true
  tags:
    - install
    - config

- name: "Create module dir zabbix-proxy"
  file:
    path: "{{ zabbix_proxy_loadmodulepath }}"
    owner: "{{ zabbix_os_user }}"
    group: "{{ zabbix_os_user }}"
    state: directory
    mode: "0755"
  become: true
  tags:
    - install
    - config

- name: "Create directory for PSK file if not exist."
  file:
    path: "{{ zabbix_proxy_tlspskfile | dirname }}"
    mode: 0755
    state: directory
  become: true
  when:
    - zabbix_proxy_tlspskfile is defined
  tags:
    - config

- name: "Place TLS PSK File"
  copy:
    dest: "{{ zabbix_proxy_tlspskfile }}"
    content: "{{ zabbix_proxy_tlspsk_secret }}"
    owner: "{{ zabbix_os_user }}"
    group: "{{ zabbix_os_user }}"
    mode: 0400
  become: true
  when:
    - zabbix_proxy_tlspskfile is defined
    - zabbix_proxy_tlspsk_secret is defined
  notify:
    - restart zabbix-proxy
  tags:
    - config

- name: "Configure zabbix-proxy"
  template:
    src: zabbix_proxy.conf.j2
    dest: "{{ zabbix_proxy_config }}"
    owner: "{{ zabbix_os_user }}"
    group: "{{ zabbix_os_user }}"
    mode: "{{ zabbix_proxy_conf_mode }}"
  notify: restart zabbix-proxy
  become: true
  tags:
    - config

- name: Ensure proxy definition is up-to-date (added/updated/removed)
  vars:
    gather_facts: false
    ansible_user: "{{ zabbix_api_login_user }}"
    ansible_network_os: community.zabbix.zabbix
    ansible_connection: httpapi
    ansible_httpapi_use_ssl: "{{ zabbix_api_use_ssl }}"
    http_login_user: "{{ zabbix_api_http_user | default(-42) }}"
    http_login_password: "{{ zabbix_api_http_password | default(-42) }}"
  community.zabbix.zabbix_proxy:
    state: "{{ zabbix_proxy_state }}"
    status: "{{ zabbix_proxy_status }}"
    proxy_name: "{{ zabbix_proxy_name }}"
    description: "{{ zabbix_proxy_description | default(omit) }}"
    interface: "{{ zabbix_proxy_interface }}"
    tls_psk: "{{ zabbix_proxy_tlspsk_secret | default(omit) }}"
    tls_psk_identity: "{{ zabbix_proxy_tlspskidentity | default(omit) }}"
    tls_subject: "{{ zabbix_proxy_tls_subject | default(omit) }}"
    tls_connect: "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsaccept if zabbix_proxy_tlsaccept else 'no_encryption'] }}"
    tls_accept: "{{ zabbix_proxy_tls_config[zabbix_proxy_tlsconnect if zabbix_proxy_tlsconnect else 'no_encryption'] }}"
  when:
    - zabbix_api_create_proxy | bool
  delegate_to: "{{ zabbix_api_server_host }}"
  tags:
    - api

- name: "zabbix-proxy started"
  service:
    name: zabbix-proxy
    state: started
    enabled: true
  become: true
  when: zabbix_proxy_manage_service | bool
  tags:
    - service
