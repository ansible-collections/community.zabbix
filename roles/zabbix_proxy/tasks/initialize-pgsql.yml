---
# task file for postgresql
- name: "Install PostgreSQL dependencies"
  when: zabbix_proxy_database_creation or zabbix_proxy_database_sqlload
  ansible.builtin.package:
    name: "{{ _zabbix_proxy_pgsql_dependencies | select | list }}"
  environment:
    http_proxy: "{{ zabbix_http_proxy | default('') }}"
    https_proxy: "{{ zabbix_https_proxy | default('') }}"
  become: true
  register: _zabbix_proxy_pgsql_packages_installed
  until: _zabbix_proxy_pgsql_packages_installed is succeeded
  tags:
    - install
    - database
    - dependencies

- name: "PostgreSQL Database prep"
  when: zabbix_proxy_database_creation | bool
  become: "{{ zabbix_proxy_dbhost_run_install }}"
  become_user: postgres
  delegate_to: "{{ zabbix_proxy_dbhost_run_install | ternary(delegated_dbhost, inventory_hostname) }}"
  vars:
    delegated_dbhost: "{{ (zabbix_proxy_dbhost == 'localhost') | ternary(inventory_hostname, zabbix_proxy_dbhost) }}"
  tags: 
   - database
  block:
    - name: "PostgreSQL | Create database"
      community.postgresql.postgresql_db:
        login_user: "{{ zabbix_proxy_pgsql_login_user | default(omit) }}"
        login_password: "{{ zabbix_proxy_pgsql_login_password | default(omit) }}"
        login_host: "{{ zabbix_proxy_pgsql_login_host | default(omit) }}"
        login_port: "{{ zabbix_proxy_dbport }}"
        login_unix_socket: "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}"
        name: "{{ zabbix_proxy_dbname }}"

    - name: "PostgreSQL | Create database user"
      community.postgresql.postgresql_user:
        login_user: "{{ zabbix_proxy_pgsql_login_user | default(omit) }}"
        login_password: "{{ zabbix_proxy_pgsql_login_password | default(omit) }}"
        login_host: "{{ zabbix_proxy_pgsql_login_host | default(omit) }}"
        login_port: "{{ zabbix_proxy_dbport }}"
        login_unix_socket: "{{ zabbix_proxy_login_unix_socket | default(omit) }}"
        name: "{{ zabbix_proxy_dbuser }}"
        password: "{{ ('md5' + (zabbix_proxy_dbpassword + zabbix_proxy_dbuser)|hash('md5')) if zabbix_proxy_dbpassword_hash_method == 'md5' else zabbix_proxy_dbpassword }}"

    - name: "PostgreSQL | Create schema {{ zabbix_proxy_dbschema }}"
      when: zabbix_proxy_dbschema != 'public'
      community.postgresql.postgresql_schema:
        login_user: "{{ zabbix_proxy_pgsql_login_user | default(omit) }}"
        login_password: "{{ zabbix_proxy_pgsql_login_password | default(omit) }}"
        login_host: "{{ zabbix_proxy_pgsql_login_host | default(omit) }}"
        login_port: "{{ zabbix_proxy_dbport }}"
        login_unix_socket: "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}"
        login_db: "{{ zabbix_proxy_dbname }}"
        name: "{{ zabbix_proxy_dbschema }}"
        owner: "{{ zabbix_proxy_dbuser }}"
      register: proxy_schema_created

    - name: "PostgreSQL | Grant ALL on schema to {{ zabbix_proxy_dbuser }}"
      when: proxy_schema_created.changed | default(false)
      community.postgresql.postgresql_privs:
        login_user: "{{ zabbix_proxy_pgsql_login_user | default(omit) }}"
        login_password: "{{ zabbix_proxy_pgsql_login_password | default(omit) }}"
        login_host: "{{ zabbix_proxy_pgsql_login_host | default(omit) }}"
        login_port: "{{ zabbix_proxy_dbport }}"
        login_unix_socket: "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}"
        login_db: "{{ zabbix_proxy_dbname }}"
        type: schema
        objs: "{{ zabbix_proxy_dbschema }}"
        roles: "{{ zabbix_proxy_dbuser }}"
        privs: "ALL"
        grant_option: yes

    - name: "PostgreSQL | Set search_path for {{ zabbix_proxy_dbuser }} to {{ zabbix_proxy_dbschema }}"
      community.postgresql.postgresql_user:
        login_user: "{{ zabbix_proxy_pgsql_login_user | default(omit) }}"
        login_password: "{{ zabbix_proxy_pgsql_login_password | default(omit) }}"
        login_host: "{{ zabbix_proxy_pgsql_login_host | default(omit) }}"
        login_port: "{{ zabbix_proxy_dbport }}"
        login_unix_socket: "{{ zabbix_proxy_pgsql_login_unix_socket | default(omit) }}"
        name: "{{ zabbix_proxy_dbuser }}"
        configuration:
          search_path: "{{ zabbix_proxy_dbschema }}"

- name: "PostgreSQL verify or create schema"
  when: zabbix_proxy_database_sqlload | bool
  tags:
    - database
  block:
    - name: "PostgreSQL | Get current database version"
      community.postgresql.postgresql_query:
        login_user: "{{ zabbix_proxy_dbuser }}"
        login_password: "{{ zabbix_proxy_dbpassword }}"
        login_host: "{{ zabbix_proxy_dbhost }}"
        port: "{{ zabbix_proxy_dbport }}"
        db: "{{ zabbix_proxy_dbname }}"
        query: 'SELECT mandatory FROM dbversion'
  rescue:
    - name: "PostgreSQL | Import schema"
      community.postgresql.postgresql_db:
        login_user: "{{ zabbix_proxy_dbuser }}"
        login_password: "{{ zabbix_proxy_dbpassword }}"
        login_host: "{{ zabbix_proxy_dbhost }}"
        port: "{{ zabbix_proxy_dbport }}"
        db: "{{ zabbix_proxy_dbname }}"
        state: restore
        target: "{{ zabbix_proxy_database_file_dir }}/postgresql/proxy.sql"
      environment:
        PGOPTIONS: "-c search_path={{ zabbix_proxy_dbschema }}"