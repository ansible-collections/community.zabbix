---
- name: Get version if not set
  when: zabbix_agent_version_long is undefined
  block:
    - name: Get latest zabbix releases
      delegate_to: localhost
      ansible.builtin.uri:
        url: https://services.zabbix.com/updates/v1
        return_content: true
      register: _zabbix_versions
      run_once: true

    - name: Set zabbix_version_long
      ansible.builtin.set_fact:
        zabbix_agent_version_long: "{{ _zabbix_versions.json | json_query(_latest_release) }}"
      vars:
        _latest_release: "versions[?version=='{{ zabbix_agent_version }}'].latest_release.release | [0]"

- name: Check, Uninstall and Install Zabbix Agent
  block:
    - name: Check if Zabbix Agent is present
      ansible.windows.win_powershell:
        script: >-
          Get-WmiObject -Class Win32_Product |
          Where-Object { $_.Name -like "*Zabbix Agent*" } |
          Select-Object Name, IdentifyingNumber, InstallLocation, Version
      register: _zabbix_agent_info
      changed_when: _zabbix_agent_info.output | length > 0

    - name: Uninstall when versions mismatch
      vars:
        _install_latest: "{{ zabbix_agent_package_state == 'latest' }}"
      ansible.windows.win_powershell:
        script: |
          [CmdletBinding()]
          param (
              [String]
              $IdentNumber
          )

          $app = Get-WmiObject -Class Win32_Product | Where-Object { $_.IdentifyingNumber -eq $IdentNumber }

          $result = $app.Uninstall()

          exit $result.ReturnValue
        parameters:
          IdentNumber: "{{ item.IdentifyingNumber }}"
      when: item.Version.split('.')[:3] | join('.') != zabbix_agent_version_long and _install_latest
      loop: "{{ _zabbix_agent_info.output }}"
      register: _zabbix_agent_uninstall_info

    - name: Download and install Zabbix Agent
      when: _zabbix_agent_info.output | length == 0 or _zabbix_agent_uninstall_info is changed | default(false)
      block:
        - name: Get User Path
          ansible.windows.win_shell: "echo $env:USERPROFILE"
          register: _zabbix_agent_win_userprofile_path

        - name: Download Zabbix Agent
          ansible.windows.win_get_url:
            url: "{{ zabbix_agent_win_download_url }}"
            dest: "{{ _zabbix_agent_win_userprofile_path.stdout | trim }}/Downloads/{{ zabbix_agent_win_package }}"
            url_username: "{{ zabbix_download_user | default(omit) }}"
            url_password: "{{ zabbix_download_pass | default(omit) }}"
            force: false
            follow_redirects: all
            proxy_url: "{{ zabbix_https_proxy | default(None) | default(omit) }}"
            validate_certs: "{{ zabbix_download_validate_certs | default(false) | bool }}"
            timeout: "{{ zabbix_download_timeout | default(120) | int }}"
          register: _zabbix_agent_win_download
          until: _zabbix_agent_win_download is succeeded
          throttle: "{{ zabbix_download_throttle | default(5) | int }}"

        # Would be sweet if this worked.
        # - name: Install Zabbix Agent
        #   ansible.windows.win_package:
        #     path: "C:/Users/{{ ansible_user }}/Downloads/{{ zabbix_agent_win_download_package }}"
        #     arguments: "/l*v zabbix.log /i /qn SERVER={{ zabbix_agent_server }}"
        #   register: _res

        # https://www.zabbix.com/documentation/current/en/manual/installation/install_from_packages/win_msi
        - name: Install Zabbix Agent
          ansible.windows.win_command:
            chdir: "{{ _zabbix_agent_win_userprofile_path.stdout | trim }}/Downloads"
            argv:
              - msiexec
              - /i
              # - "/l*v zabbix-install.log"
              - "{{ zabbix_agent_win_package }}"
              - /qn
              - "SERVER={{ zabbix_agent_server }}"
