---
- name: "Set default ip address for zabbix_agent_ip"
  set_fact:
    zabbix_agent_ip: "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"
  when:
    - zabbix_agent_ip is not defined
    - "'ansible_ip_addresses' in hostvars[inventory_hostname]"

- name: "Windows | Set default architecture"
  set_fact:
    windows_arch: 32

- name: "Windows | Override architecture if 64-bit"
  set_fact:
    windows_arch: 64
  when:
    - ansible_architecture == "64-bit"

- name: "Windows | Set path to zabbix.exe"
  set_fact:
    zabbix_win_exe_path: '{{ zabbix_win_install_dir }}\bin\win{{ windows_arch }}\zabbix_agentd.exe'

- name: "Windows | Set variables specific to Zabbix >= 4"
  set_fact:
    zabbix_win_svc_name: Zabbix Agent
    zabbix_win_exe_path: '{{ zabbix_win_install_dir }}\bin\zabbix_agentd.exe'
  when:
    - zabbix_version_long is version('4.0.0', '>=')

- name: "Windows | Set variables specific to Zabbix (agent 2)"
  set_fact:
    zabbix_win_svc_name: Zabbix Agent 2
    zabbix_win_exe_path: '{{ zabbix_win_install_dir }}\bin\zabbix_agent2.exe'
  when:
    - zabbix_agent2 | bool

- name: "Windows | Check if Zabbix agent is present"
  win_stat:
    path: '{{ zabbix_win_exe_path }}'
  register: agent_file_info

- name: "Windows | Get Installed Zabbix Agent Version"
  win_file_version:
    path: "{{ zabbix_win_exe_path }}"
  register: zabbix_win_exe_info
  when:
    - agent_file_info.stat.exists

- name: "Windows | Checking Update (Set default)"
  set_fact:
    update_zabbix_agent: False
  when:
    - agent_file_info.stat.exists

- name: "Windows | Checking Update"
  set_fact:
    update_zabbix_agent: True
  when:
    - agent_file_info.stat.exists
    - zabbix_win_exe_info.win_file_version.product_version is version(zabbix_version_long, '<')
    - zabbix_agent_package_state == 'latest'

- name: "Windows | Check Zabbix service"
  win_service:
    name: "{{ zabbix_win_svc_name }}"
  register: zabbix_service_info

- name: Windows | Check firewall service
  win_service:
    name: MpsSvc
  register: firewall_info

- name: "Windows | Stop Zabbix (Update)"
  win_service:
    name: "{{ zabbix_win_svc_name }}"
    start_mode: auto
    state: stopped
  when:
    - zabbix_service_info.exists
    - update_zabbix_agent | default(False) | bool
    - zabbix_service_info.state == 'running'

- name: "Windows | Uninstall Zabbix (Update)"
  win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir }}\zabbix_agentd.conf" --uninstall'
  register: zabbix_windows_install
  when:
    - zabbix_service_info.exists
    - update_zabbix_agent | default(False) | bool

- name: "Windows | Uninstall Zabbix (Update) (agent 2)"
  win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir }}\zabbix_agent2.conf" --uninstall'
  register: zabbix_windows_install
  when:
    - zabbix_service_info.exists
    - update_zabbix_agent | default(False) | bool
    - zabbix_agent2 | bool

- name: "Windows | Removing Zabbix Directory (Update)"
  win_file:
    path: '{{ zabbix_win_install_dir }}'
    state: absent
  when:
    - update_zabbix_agent | default(False) | bool
    - agent_file_info.stat.exists
    - remove_zabbix_directory | default(False) | bool

- name: "Windows | Create directory structure"
  win_file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ zabbix_win_install_dir }}"

- name: "Windows | Create directory structure, includes"
  win_file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ zabbix_agent_win_include }}"
  when:
    - ('.conf' not in zabbix_agent_win_include)

- name: "Windows | Place TLS-PSK file"
  win_copy:
    content: "{{ zabbix_agent_tlspsk_secret }}"
    dest: "{{ zabbix_agent_tlspskfile }}"
  when:
    - zabbix_agent_tlspskfile is defined
    - zabbix_agent_tlspsk_secret is defined
  notify: restart win zabbix agent

- name: "Windows | Check if file is already downloaded"
  win_stat:
    path: '{{ zabbix_win_install_dir }}\{{ zabbix_win_package }}'
  register: file_info

- name: "Windows | Download Zabbix Agent Zip file"
  win_get_url:
    url: "{{ zabbix_win_download_link }}"
    dest: '{{ zabbix_win_install_dir }}\{{ zabbix_win_package }}'
    url_username: "{{zabbix_download_user|default(omit)}}"
    url_password: "{{zabbix_download_pass|default(omit)}}"
    force: False
    follow_redirects: all
    proxy_url: "{{ zabbix_https_proxy | default(None) | default(omit) }}"
    validate_certs: "{{ zabbix_download_validate_certs | default(False) | bool }}"
    timeout: "{{ zabbix_download_timeout | default(120) | int }}"
  when: not file_info.stat.exists
  register: zabbix_agent_win_download_zip
  until: zabbix_agent_win_download_zip is succeeded
  throttle: "{{ zabbix_download_throttle | default(5) | int }}"

- name: "Windows | Unzip file"
  win_unzip:
    src: '{{ zabbix_win_install_dir }}\{{ zabbix_win_package }}'
    dest: "{{ zabbix_win_install_dir }}"
    creates: '{{ zabbix_win_exe_path }}'

- name: "Windows | Cleanup downloaded Zabbix Agent Zip file"
  win_file:
    path: '{{ zabbix_win_install_dir }}\{{ zabbix_win_package }}'
    state: absent
  when:
    - zabbix_agent_win_download_zip.changed

- name: "Windows | Configure zabbix-agent"
  win_template:
    src: zabbix_agentd.conf.j2
    dest: '{{ zabbix_win_install_dir }}\zabbix_agentd.conf'
  notify: restart win zabbix agent
  when:
    - not zabbix_agent2

- name: "Windows | Configure zabbix-agent2"
  win_template:
    src: zabbix_agent2.conf.j2
    dest: '{{ zabbix_win_install_dir }}\zabbix_agent2.conf'
  notify: restart win zabbix agent
  when:
    - zabbix_agent2 | bool

- name: "Windows | Register Service"
  win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir }}\zabbix_agentd.conf" --install'
  register: zabbix_windows_install
  args:
    creates: '{{ zabbix_win_install_dir }}\.installed'
  when:
    - not zabbix_agent2

- name: "Windows | Register Service (agent 2)"
  win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir }}\zabbix_agent2.conf" --install'
  register: zabbix_windows_install
  args:
    creates: '{{ zabbix_win_install_dir }}\.installed'
  when:
    - zabbix_agent2 | bool

- name: "Windows | Create done file so it won't register itself again"
  win_file:
    path: '{{ zabbix_win_install_dir }}\.installed'
    state: touch
  when: zabbix_windows_install is changed

- name: "Windows | Set service startup mode to auto and ensure it is started"
  win_service:
    name: "{{ zabbix_win_svc_name }}"
    start_mode: auto
    state: started

- name: "Windows | Getting Zabbix Service Recovery Settings"
  win_shell: 'sc.exe qfailure "{{ zabbix_win_svc_name }}" 1100'
  register: svc_recovery
  changed_when: false
  check_mode: false
  when: zabbix_agent_win_svc_recovery

- name: "Windows | Setting Zabbix Service Recovery"
  win_shell: 'sc.exe failure "{{ zabbix_win_svc_name }}" actions= restart/5000/restart/10000/restart/20000 reset= 86400'
  when:
    - "'RESTART -- Delay' not in svc_recovery.stdout"
    - zabbix_agent_win_svc_recovery

- name: "Windows | Firewall rule"
  win_firewall_rule:
    name: "{{ zabbix_win_svc_name }}"
    localport: "{{ zabbix_agent_listenport }}"
    action: allow
    direction: in
    protocol: tcp
    state: present
    enabled: yes
  when: firewall_info.state == 'started'
