---
- name: "Windows | Set base variables"
  ansible.builtin.set_fact:
    zabbix_agent_win_logfile: "{{ zabbix_agent_win_logfile is defined | ternary(zabbix_agent_win_logfile, zabbix_agent2_win_logfile) | default(_win_logfile) }}"
    zabbix_agent_win_package: "{{ zabbix_agent_win_package is defined | ternary(zabbix_agent_win_package, zabbix_agent2_win_package) | default(_win_package) }}"
    zabbix_agent_win_include: "{{ zabbix_agent_win_include is defined | ternary(zabbix_agent_win_include, zabbix_agent2_win_include) | default(_win_include) }}"
    zabbix_win_install_dir_setup: '{{ zabbix_win_install_dir }}\setup'
    zabbix_win_package: "{{ zabbix_win_package | default(_win_package) }}"
    zabbix_win_svc_name: Zabbix Agent
    zabbix_win_exe_name: 'zabbix_agentd.exe'
    zabbix_win_exe_path: '{{ zabbix_win_install_dir_bin }}\zabbix_agentd.exe'
    zabbix_win_config_name: "zabbix_agentd.conf"
    zabbix2_win_svc_name: Zabbix Agent 2
    zabbix2_win_exe_name: 'zabbix_agent2.exe'
    zabbix2_win_exe_path: '{{ zabbix_win_install_dir_bin }}\zabbix_agent2.exe'
    zabbix2_win_config_name: "zabbix_agent2.conf"
  tags:
    - always

- name: "Windows | Check if Zabbix agent is present"
  ansible.windows.win_stat:
    path: "{{ item }}"
  loop:
    - "{{ zabbix_win_exe_path }}"
    - "{{ zabbix2_win_exe_path }}"
  register: agent_file_info
  tags:
    - always

- name: "Windows | Get Installed Zabbix Agent Version"
  community.windows.win_file_version:
    path: "{{ item.item }}"
  register: zabbix_win_exe_info
  when:
    - item.stat.exists | bool
  loop: "{{ agent_file_info.results }}"
  loop_control:
    label: "{{ item.item }}"
  tags:
    - always

- name: "Windows | Set facts current zabbix agent installation"
  ansible.builtin.set_fact:
    zabbix_agent_1_binary_exist: true
    zabbix_agent_1_version: "{{ zabbix_win_exe_info.results[0].win_file_version.product_version }}"
  when:
    - zabbix_win_exe_info.results[0] is defined
    - zabbix_win_exe_info.results[0].item.stat.exists
    - zabbix_win_exe_info.results[0].item.stat.path == zabbix_win_exe_path
    - zabbix_win_exe_info.results[0].win_file_version.product_version
  tags:
    - always

- name: "Windows | Set facts current zabbix agent installation (agent 2)"
  ansible.builtin.set_fact:
    zabbix_agent_2_binary_exist: true
    zabbix_agent_2_version: "{{ zabbix_win_exe_info.results[1].win_file_version.product_version }}"
  when:
    - zabbix_win_exe_info.results[1] is defined
    - zabbix_win_exe_info.results[1].item.stat.exists
    - zabbix_win_exe_info.results[1].item.stat.path == zabbix2_win_exe_path
    - zabbix_win_exe_info.results[1].win_file_version.product_version
  tags:
    - always

- name: "Windows | Check Zabbix service"
  ansible.windows.win_service:
    name: "{{ (item.item.stat.path == zabbix_win_exe_path) | ternary(zabbix_win_svc_name, zabbix2_win_svc_name) }}"
  register: zabbix_service_info
  when: item.item.stat.exists
  loop: "{{ zabbix_win_exe_info.results }}"
  loop_control:
    label: "{{ item.item.item }}"
  tags:
    - always

- name: "Windows | Set facts about current zabbix agent service state"
  ansible.builtin.set_fact:
    zabbix_agent_1_service_exist: true
  when:
    - zabbix_service_info.results[0].exists is defined
    - zabbix_service_info.results[0].exists
    - zabbix_service_info.results[0].display_name == zabbix_win_svc_name
  tags:
    - always

- name: "Windows | Set facts about current zabbix agent service state (agent 2)"
  ansible.builtin.set_fact:
    zabbix_agent_2_service_exist: true
  when:
    - zabbix_service_info.results[1].exists is defined
    - zabbix_service_info.results[1].exists
    - zabbix_service_info.results[1].display_name == zabbix2_win_svc_name
  tags:
    - always

- name: "Windows | Set fact about version change requirement"
  ansible.builtin.set_fact:
    zabbix_agent_version_change: true
  when: >
    (zabbix_agent_1_binary_exist | default(false) and
     zabbix_win_exe_info.results[0].win_file_version.product_version is version(zabbix_version_long, '<>'))
    or
    (zabbix_agent_2_binary_exist | default(false) and
     zabbix_win_exe_info.results[1].win_file_version.product_version is version(zabbix_version_long, '<>'))
    or (zabbix_agent_1_binary_exist | default(false) and zabbix_agent2)
    or (zabbix_agent_2_binary_exist | default(false) and not zabbix_agent2)
  tags:
    - always

##################
# delete section #
##################

- name: "Windows | Stop Zabbix agent v1"
  ansible.windows.win_service:
    name: "{{ zabbix_win_svc_name }}"
    state: stopped
  when:
    - zabbix_agent_version_change | default(false) or zabbix_agent2
    - zabbix_agent_1_service_exist | default(false)

- name: "Windows | Stop Zabbix agent v2"
  ansible.windows.win_service:
    name: "{{ zabbix2_win_svc_name }}"
    state: stopped
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_agent2
    - zabbix_agent_2_service_exist | default(false)

- name: "Windows | Uninstall Zabbix v1"
  ansible.windows.win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir_conf }}\{{ zabbix_win_config_name }}" --uninstall'
  when:
    - zabbix_agent_version_change | default(false) or zabbix_agent2
    - zabbix_agent_1_service_exist | default(false)

- name: "Windows | Uninstall Zabbix v2"
  ansible.windows.win_command: '"{{ zabbix2_win_exe_path }}" --config "{{ zabbix_win_install_dir_conf }}\{{ zabbix2_win_config_name }}" --uninstall'
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_agent2
    - zabbix_agent_2_service_exist | default(false)

- name: "Windows | Removing Zabbix bin Directory"
  ansible.windows.win_file:
    path: "{{ zabbix_win_install_dir_bin }}"
    state: absent
  register: zabbix_agent_dir_remove_result
  until: zabbix_agent_dir_remove_result is succeeded
  retries: 5
  delay: 15
  when:
    ((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or
    ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))

- name: "Windows | Removing Zabbix conf Directory"
  ansible.windows.win_file:
    path: "{{ zabbix_win_install_dir_conf }}"
    state: absent
  register: zabbix_agent_dir_remove_result
  until: zabbix_agent_dir_remove_result is succeeded
  retries: 5
  delay: 15
  when:
    - zabbix_win_config_remove
    - >
      ((zabbix_agent_version_change | default(false) or zabbix_agent2) and zabbix_agent_1_binary_exist | default(false)) or
      ((zabbix_agent_version_change | default(false) or not zabbix_agent2) and zabbix_agent_2_binary_exist | default(false))

###################
# install section #
###################

- name: "Windows | Set installation settings (agent 2)"
  ansible.builtin.set_fact:
    zabbix_win_exe_path: "{{ zabbix2_win_exe_path }}"
    zabbix_win_exe_name: "{{ zabbix2_win_exe_name }}"
    zabbix_win_config_name: "{{ zabbix2_win_config_name }}"
    zabbix_win_svc_name: "{{ zabbix2_win_svc_name }}"
  when: zabbix_agent2 | bool
  tags:
    - install

- name: "Windows | Check if agent binaries in place"
  ansible.windows.win_stat:
    path: "{{ zabbix_win_exe_path }}"
  register: zabbix_windows_binaries
  tags:
    - install

- name: "Windows | Create directory structure"
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ zabbix_win_install_dir }}"
    - "{{ zabbix_win_install_dir_conf }}"
    - "{{ zabbix_win_install_dir_bin }}"
    - "{{ zabbix_win_install_dir_setup }}"
  when: zabbix_agent_version_change | default(false) or not zabbix_windows_binaries.stat.exists
  tags:
    - install

- name: "Windows | Create directory structure, includes"
  ansible.windows.win_file:
    path: "{{ zabbix_agent_win_include }}"
    state: directory
  when:
    - ('.conf' not in zabbix_agent_win_include)
  tags:
    - install

- name: "Windows | Check if agent file is already downloaded"
  ansible.windows.win_stat:
    path: '{{ zabbix_win_install_dir_setup }}\{{ zabbix_win_package }}'
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_windows_binaries.stat.exists
  register: file_info
  tags:
    - install

- name: "Windows | Download Zabbix Agent Zip file"
  ansible.windows.win_get_url:
    url: "{{ zabbix_win_download_link }}"
    dest: '{{ zabbix_win_install_dir_setup }}\{{ zabbix_win_package }}'
    url_username: "{{ zabbix_download_user | default(omit) }}"
    url_password: "{{ zabbix_download_pass | default(omit) }}"
    force: false
    follow_redirects: all
    proxy_url: "{{ zabbix_https_proxy | default(None) | default(omit) }}"
    validate_certs: "{{ zabbix_download_validate_certs | default(False) | bool }}"
    timeout: "{{ zabbix_download_timeout | default(120) | int }}"
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_windows_binaries.stat.exists
    - not file_info.stat.exists
  register: zabbix_agent_win_download_zip
  until: zabbix_agent_win_download_zip is succeeded
  throttle: "{{ zabbix_download_throttle | default(5) | int }}"
  tags:
    - install

- name: "Windows | Unzip file"
  community.windows.win_unzip:
    src: '{{ zabbix_win_install_dir_setup }}\{{ zabbix_win_package }}'
    dest: "{{ zabbix_win_install_dir_setup }}"
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_windows_binaries.stat.exists
    - zabbix_agent_win_download_zip is changed or file_info.stat.exists
  tags:
    - install

- name: "Windows | Copy binary files to expected location"
  ansible.windows.win_copy:
    src: "{{ zabbix_win_install_dir_setup }}\\bin\\{{ item }}"
    dest: "{{ zabbix_win_install_dir_bin }}\\{{ item }}"
    remote_src: true
  loop:
    - "{{ zabbix_win_exe_name }}"
    - zabbix_sender.exe
    - zabbix_get.exe
  when:
    - zabbix_agent_version_change | default(false) or not zabbix_windows_binaries.stat.exists
    - zabbix_agent_win_download_zip is changed or file_info.stat.exists
  tags:
    - install

- name: "Windows | Copy initial configuration to expected location"
  ansible.windows.win_copy:
    src: "{{ zabbix_win_install_dir_setup }}\\conf\\{{ zabbix_win_config_name }}"
    dest: "{{ zabbix_win_install_dir_conf }}\\{{ zabbix_win_config_name }}"
    force: false
    remote_src: true
  when:
    - zabbix_agent_win_download_zip is changed or file_info.stat.exists | default(false)
  tags:
    - install

- name: "Windows | Copy plugin configuration to expected location on Agent 2"
  ansible.windows.win_copy:
    src: "{{ zabbix_win_install_dir_setup }}\\conf\\zabbix_agent2.d\\plugins.d"
    dest: "{{ zabbix_win_install_dir_conf }}\\zabbix_agent2.d\\plugins.d"
    force: false
    remote_src: true
  when:
    - zabbix_agent2
    - zabbix_agent_win_download_zip is changed or file_info.stat.exists | default(false)
  tags:
    - install

- name: "Windows | Cleanup temporary setup directory"
  ansible.windows.win_file:
    path: '{{ zabbix_win_install_dir_setup }}'
    state: absent
  tags:
    - install

- name: "Windows | Check if windows service exist"
  ansible.windows.win_service:
    name: "{{ zabbix_win_svc_name }}"
  register: zabbix_windows_service
  tags:
    - service

- name: "Windows | Register Service"
  ansible.windows.win_command: '"{{ zabbix_win_exe_path }}" --config "{{ zabbix_win_install_dir_conf }}\{{ zabbix_win_config_name }}" --install'
  when: not zabbix_windows_service.exists
  tags:
    - service
