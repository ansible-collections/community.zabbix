---
# task file for mysql
- name: "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)"
  set_fact:
    delegated_dbhost: "{{ zabbix_server_dbhost if (zabbix_server_dbhost != 'localhost') else inventory_hostname }}"
  when:
    - zabbix_server_dbhost_run_install

- name: "Set the correct delegated_dbhost (to support MySQL db deployment on a remote dbhost)"
  set_fact:
    delegated_dbhost:  "{{ inventory_hostname }}"
  when:
    - not zabbix_server_dbhost_run_install

- name: "Override delegated_dbhost with real dbhost when dbhost is behind loadbalancer"
  set_fact:
    delegated_dbhost: "{{ zabbix_server_real_dbhost }}"
  when: zabbix_server_real_dbhost | default(false)

- name: "MySQL | Create database"
  mysql_db:
    name: "{{ zabbix_server_dbname }}"
    encoding: "{{ zabbix_server_dbencoding }}"
    collation: "{{ zabbix_server_dbcollation }}"
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
    state: present
  when: zabbix_database_creation
  register: zabbix_database_created
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database
    - skip_ansible_lint

- name: "MySQL | Create database user"
  mysql_user:
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
    name: "{{ zabbix_server_dbuser }}"
    password: "{{ zabbix_server_dbpassword }}"
    priv: "{{ zabbix_server_dbname }}.*:ALL"
    host: "{{ zabbix_server_privileged_host }}"
    state: present
  when: zabbix_database_creation
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "Get the file for create.sql >= 3.0"
  shell: ls -1 {{ datafiles_path }}/create.sq*
  changed_when: False
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
  register: ls_output_create
  tags:
    - zabbix-server
    - database

- name: MySQL | Get current database version
  shell: |
    mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \
    -p'{{ zabbix_server_dbpassword }}' -D '{{ zabbix_server_dbname }}' \
    -e 'SELECT mandatory FROM dbversion;'
  register: mysql_db_version
  changed_when: False
  ignore_errors: True

# If the above check failed, then there was no dbversion table in the database.
# We'll create it, below. Otherwise, we can access the database version in
# `mysql_db_version["stdout_lines"][1]`, for example 5000000 for Zabbix 5.0.
- name: MySQL | Check if database needs to be populated
  set_fact:
    mysql_schema_empty: "{{ mysql_db_version is failed }}"

- name: "MySQL | Get current value for innodb_default_row_format"
  shell: |
    set -euo pipefail
    mysql -h {{ zabbix_server_dbhost }} -u{{ zabbix_server_dbuser }} \
    -p'{{ zabbix_server_dbpassword }}' \
    -e 'SHOW VARIABLES;' 2>&1 | grep innodb_default_row_format \
    | awk '{print $2}' | tr [:upper:] [:lower:]
  register: mysql_innodb_default_row_format
  args:
    executable: /bin/bash
  changed_when: False
  become: true

- name: "MySQL | Set innodb_default_row_format to dynamic"
  mysql_variables:
    variable: innodb_default_row_format
    value: dynamic
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty
    - mysql_innodb_default_row_format.stdout != 'dynamic'
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "MySQL | Disable InnoDB Strict Mode"
  mysql_variables:
    variable: innodb_strict_mode
    value: 0
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty
    - ansible_distribution_release == "buster"
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "Fetch sql create file"
  fetch:
    src: "{{ ls_output_create.stdout }}"
    dest: /tmp/{{ role_name }}/
    flat: yes
  when:
    - delegated_dbhost != inventory_hostname
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty

- name: "Copy sql create file"
  copy:
    src: /tmp/{{ role_name }}/
    dest: "{{ ls_output_create.stdout | dirname }}"
  delegate_to: "{{ delegated_dbhost }}"
  when:
    - delegated_dbhost != inventory_hostname
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty

- name: "MySQL | Create database and import file >= 3.0"
  mysql_db:
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
    name: "{{ zabbix_server_dbname }}"
    encoding: "{{ zabbix_server_dbencoding }}"
    collation: "{{ zabbix_server_dbcollation }}"
    state: import
    target: "{{ ls_output_create.stdout }}"
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "MySQL | Revert innodb_default_row_format to previous value"
  mysql_variables:
    variable: innodb_default_row_format
    value: '{{ mysql_innodb_default_row_format.stdout }}'
    login_host: "{{ zabbix_server_mysql_login_host | default(omit) }}"
    login_user: "{{ zabbix_server_mysql_login_user | default(omit) }}"
    login_password: "{{ zabbix_server_mysql_login_password | default(omit) }}"
    login_port: "{{ zabbix_server_mysql_login_port | default(omit) }}"
    login_unix_socket: "{{ zabbix_server_mysql_login_unix_socket | default(omit) }}"
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty
    - mysql_innodb_default_row_format.stdout != 'dynamic'
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "Check if we have sql_done files >= 3.0"
  file:
    path: /etc/zabbix/create.done
    state: touch
  when:
    - zabbix_version is version('3.0', '>=')
    - zabbix_database_sqlload | bool
    - zabbix_repo != "epel"
    - mysql_schema_empty

- name: "Get the correct path for the SQL files < 3.0"
  shell: ls -1 {{ datafiles_path }}/{{ mysql_create_dir }}{{ item }}.sql*
  changed_when: False
  register: ls_output_schema
  with_items:
    - schema
    - images
    - data
  when:
    - zabbix_version is version('3.0', '<')
    - zabbix_database_sqlload | bool
  tags:
    - zabbix-server
    - database

- name: "Check if we have done files < 3.0"
  stat:
    path: /etc/zabbix/{{ item }}.done
  register: done_files
  with_items:
    - schema
    - images
    - data
  when:
    - zabbix_version is version('3.0', '<')
    - zabbix_database_sqlload | bool
  tags:
    - zabbix-server
    - database

- name: "Create fact if sql_done files exists"
  set_fact:
    sql_files_executed: "{{ sql_files_executed | default({}) | combine({item.item: item.stat}) }}"
  with_items: "{{ done_files.results }}"
  when:
    - zabbix_version is version('3.0', '<')
    - zabbix_database_sqlload | bool
  tags:
    - zabbix-server
    - database

- name: "MySQL | Create database and import files < 3.0"
  mysql_db:
    name: "{{ zabbix_server_dbname }}"
    encoding: "{{ zabbix_server_dbencoding }}"
    collation: "{{ zabbix_server_dbcollation }}"
    state: import
    target: "{{ item.stdout }}"
  with_items: "{{ ls_output_schema.results }}"
  when:
    - zabbix_version is version('3.0', '<')
    - zabbix_database_sqlload | bool
    - not sql_files_executed[item.item].exists
  delegate_to: "{{ delegated_dbhost }}"
  tags:
    - zabbix-server
    - database

- name: "Check if we have sql_done files < 3.0"
  file:
    path: /etc/zabbix/{{ item }}.done
    state: touch
  with_items:
    - schema
    - images
    - data
  when:
    - zabbix_version is version('3.0', '<')
    - zabbix_database_sqlload | bool
    - not sql_files_executed[item].exists
  tags:
    - zabbix-server
    - database
