---
- name: Create FTP Service Template
  community.zabbix.zabbix_template:
    template_name: FTP Service
    template_groups:
      - "Templates"
    state: present

- name: Create a new Zabbix template (check mode).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    state: present
  register: create_zabbix_template_result
  check_mode: true

- ansible.builtin.assert:
    that:
      - create_zabbix_template_result.changed is sameas true

- name: Create a new Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    state: present
  register: create_zabbix_template_result

- ansible.builtin.assert:
    that:
      - create_zabbix_template_result.changed is sameas true

- name: Create a new Zabbix template (idempotency check).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    state: present
  register: create_zabbix_template_result

- ansible.builtin.assert:
    that:
      - create_zabbix_template_result.changed is sameas false

- name: Create a new Zabbix template with linked templates.
  community.zabbix.zabbix_template:
    template_name: ExampleHostWithLinked
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    state: present
  register: create_zabbix_template_linked_result

- ansible.builtin.assert:
    that:
      - create_zabbix_template_linked_result.changed is sameas true

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleHost
    format: json
  register: gather_template_result

- name: "test - Set key to template_export_key variable(This deals with the key being masked)"
  ansible.builtin.set_fact:
    template_export_key: "{{ item }}"
  loop: "{{ gather_template_result.template_json.keys() | list }}"
  when:
    - item | regex_search('_export')

- ansible.builtin.assert:
    that:
      - gather_template_result.template_json[template_export_key][template_groups_key].0.name == 'Templates'
      - gather_template_result.template_json[template_export_key][template_groups_key].1.name == 'Templates/Applications'

- name: Add link_templates to Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that:
      - update_zabbix_template_result.changed is sameas true

- name: Add link_templates to Zabbix template (idempotency check).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that:
      - update_zabbix_template_result.changed is sameas false

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleHost
    format: json
  register: gather_template_result

- ansible.builtin.assert:
    that:
      - gather_template_result.template_json[template_export_key][template_groups_key].0.name == 'Templates'
      - gather_template_result.template_json[template_export_key][template_groups_key].1.name == 'Templates/Applications'
      - gather_template_result.template_json[template_export_key].templates.0.templates.0.name == 'FTP Service'
      - gather_template_result.template_json[template_export_key].templates.0.templates.1.name == 'Zabbix proxy health'

- name: Add macros to Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    macros:
      - macro: "{$EXAMPLE_MACRO1}"
        value: 1000
      - macro: "{$EXAMPLE_MACRO2}"
        value: "text"
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that:
      - update_zabbix_template_result.changed is sameas true

- name: Add macros to Zabbix template (idempotency check).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    macros:
      - macro: "{$EXAMPLE_MACRO1}"
        value: 1000
      - macro: "{$EXAMPLE_MACRO2}"
        value: "text"
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that:
      - update_zabbix_template_result.changed is sameas false

- name: Add tags to Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    macros:
      - macro: "{$EXAMPLE_MACRO1}"
        value: 1000
      - macro: "{$EXAMPLE_MACRO2}"
        value: "text"
    tags:
      - tag: tag1
        value: 1000
      - tag: tag2
        value: text
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that: update_zabbix_template_result is changed

- name: Add tags to Zabbix template (idempotency check).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    macros:
      - macro: "{$EXAMPLE_MACRO1}"
        value: 1000
      - macro: "{$EXAMPLE_MACRO2}"
        value: "text"
    tags:
      - tag: tag1
        value: 1000
      - tag: tag2
        value: text
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that: update_zabbix_template_result is not changed

- name: Remove tags from Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    template_groups:
      - "Templates"
      - "Templates/Applications"
    link_templates:
      - "Zabbix proxy health"
      - "FTP Service"
    macros:
      - macro: "{$EXAMPLE_MACRO1}"
        value: 1000
      - macro: "{$EXAMPLE_MACRO2}"
        value: "text"
    tags: []
    state: present
  register: update_zabbix_template_result

- ansible.builtin.assert:
    that: update_zabbix_template_result is changed

- name: Delete Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    state: absent
  register: delete_zabbix_template_result

- ansible.builtin.assert:
    that:
      - delete_zabbix_template_result.changed is sameas true

#
# JSON Tests
#

- name: Import Zabbix template from JSON file (idempotency check).
  community.zabbix.zabbix_template:
    template_json: "{{ lookup('file', 'template3_54_higher.json') }}"
    state: present
  register: import_template_json

- name: Assert Zabbix template from JSON file (idempotency check).
  ansible.builtin.assert:
    that:
      - import_template_json.changed is sameas true

- name: Import Zabbix template from JSON file with matching values (idempotency check).
  community.zabbix.zabbix_template:
    template_json: "{{ lookup('file', 'template3_54_higher.json') }}"
    state: present
  register: import_template_json

- name: Assert Zabbix template from JSON file with matching values (idempotency check).
  ansible.builtin.assert:
    that:
      - import_template_json.changed is sameas false

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleHost
    format: json
  register: gather_template_result

- block:
    - ansible.builtin.assert:
        that:
          - gather_template_result.template_json[template_export_key][template_groups_key].0.name == 'Templates'
          - gather_template_result.template_json[template_export_key][template_groups_key].1.name == 'Templates/Applications'
          - gather_template_result.template_json[template_export_key].templates.0.templates.0.name == 'FTP Service'
          - gather_template_result.template_json[template_export_key].templates.0.templates.1.name == 'Zabbix proxy health'
          - gather_template_result.template_json[template_export_key].templates.0.macros.0.macro == '{$EXAMPLE_MACRO1}'
          - gather_template_result.template_json[template_export_key].templates.0.macros.0.value == '1000'
          - gather_template_result.template_json[template_export_key].templates.0.macros.1.macro == '{$EXAMPLE_MACRO2}'
          - gather_template_result.template_json[template_export_key].templates.0.macros.1.value == 'text'

- name: Import Zabbix template from JSON file with updated values.
  community.zabbix.zabbix_template:
    template_json: "{{ lookup('file', 'template3-changed_54_higher.json') }}"
    state: present
  register: import_template_json

- ansible.builtin.assert:
    that:
      - import_template_json.changed is sameas true

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleHost
    format: json
  register: gather_template_result

- ansible.builtin.assert:
    that:
      - gather_template_result.template_json[template_export_key].templates.0.macros.0.macro == '{$EXAMPLE_MACRO1}'
      - gather_template_result.template_json[template_export_key].templates.0.macros.0.value == '1000'
      - gather_template_result.template_json[template_export_key].templates.0.macros.1.macro == '{$EXAMPLE_MACRO2}'
      - gather_template_result.template_json[template_export_key].templates.0.macros.1.value == 'text'
      - gather_template_result.template_json[template_export_key].templates.0.macros.2.macro == '{$EXAMPLE_MACRO3}'
      - gather_template_result.template_json[template_export_key].templates.0.macros.2.value == 'text2'

#
# xml
#

- block:
    - name: Import Zabbix template from XML file with updated values.
      community.zabbix.zabbix_template:
        template_xml: "{{ lookup('file', 'template3_54_higher.xml') }}"
        state: present
      register: import_template_xml

    - ansible.builtin.assert:
        that:
          - import_template_xml.changed is sameas true

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleHost
    format: json
  register: gather_template_result

# zabbix returns values sorted alphabetically so HTTP Service template comes before Zabbix Proxy template
- block:
    - ansible.builtin.assert:
        that:
          - gather_template_result.template_json[template_export_key].templates.0.templates.0.name == 'FTP Service'
          - gather_template_result.template_json[template_export_key].templates.0.templates.1.name == 'Zabbix proxy health'

#
# Cleanup again
#

- name: Delete Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    state: absent
  register: delete_zabbix_template_result

- ansible.builtin.assert:
    that:
      - delete_zabbix_template_result.changed is sameas true

- name: Delete Zabbix template (idempotency check).
  community.zabbix.zabbix_template:
    template_name: ExampleHost
    state: absent
  register: delete_zabbix_template_result

- ansible.builtin.assert:
    that:
      - delete_zabbix_template_result.changed is sameas false

#
# Unicode stuff
#

# The test if decode Unicode correctly and to be imported the template.
# https://github.com/ansible-collections/community.zabbix/issues/314
- name: Import Zabbix template from JSON file with unicode.
  community.zabbix.zabbix_template:
    template_json: "{{ lookup('file', 'template1_50_higher_decode_unicode.json') }}"
    state: present
  register: import_template_json

- name: Gather Zabbix template infomation.
  community.zabbix.zabbix_template_info:
    template_name: ExampleTemplate314
    format: json
  register: gather_template_result

- ansible.builtin.assert:
    that:
      - import_template_json.changed is sameas true
      - gather_template_result.template_json.zabbix_export.templates.0.description == "\u30c6\u30b9\u30c8\u30b3\u30e1\u30f3\u30c8"

- name: Delete Zabbix template.
  community.zabbix.zabbix_template:
    template_name: ExampleTemplate314
    state: absent
  register: delete_zabbix_template_result

- ansible.builtin.assert:
    that:
      - delete_zabbix_template_result.changed is sameas true

- name: Clean up ExampleHostWithLinked template
  community.zabbix.zabbix_template:
    template_name: ExampleHostWithLinked
    state: absent
