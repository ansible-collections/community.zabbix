---
name: "community.zabbix.zabbix_agent"
on:
  push:
    paths:
      - "roles/zabbix_agent/**"
      - "molecule/zabbix_agent/**"
      - "molecule/requirements.txt"
      - ".github/workflows/agent.yml"
  pull_request:
    paths:
      - "roles/zabbix_agent/**"
      - "molecule/zabbix_agent/**"
      - "molecule/requirements.txt"
      - ".github/workflows/agent.yml"
jobs:
  molecule:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        container:
          - rockylinux9
          - rockylinux8
          - ubuntu2204
          - ubuntu2004
          - ubuntu1804
          - debian12
          - debian11
          - debian10
        version:
            - v64
            - v62
            - v60
        scenario_name:
          - default
          - autopsk
          - agent2
          - agent2autopsk
        exclude:
          - container: debian12
            version: v62

    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r molecule/requirements.txt

      - name: Install ansible.netcommon collection
        run: ansible-galaxy collection install ansible.netcommon

      - name: Build the collection
        run: |
          collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
          echo "COLLECTION_FILE=$collection_file" >> $GITHUB_ENV

      - name: Install the collection
        run: ansible-galaxy collection install $COLLECTION_FILE

      - name: Run role tests
        working-directory: molecule/zabbix_agent_tests
        run: >-
          MY_MOLECULE_CONTAINER=${{ matrix.container }}
          MY_MOLECULE_IMAGE=${{ matrix.container }}
          MY_MOLECULE_VERSION=${{ matrix.version }}
          MY_MOLECULE_DOCKER_COMMAND=${{ matrix.command }}
          molecule -c common/molecule.yml test -s ${{ matrix.scenario_name }}